pub type ALboolean = ::std::os::raw::c_char;
pub type ALchar = ::std::os::raw::c_char;
pub type ALbyte = ::std::os::raw::c_char;
pub type ALubyte = ::std::os::raw::c_uchar;
pub type ALshort = ::std::os::raw::c_short;
pub type ALushort = ::std::os::raw::c_ushort;
pub type ALint = ::std::os::raw::c_int;
pub type ALuint = ::std::os::raw::c_uint;
pub type ALsizei = ::std::os::raw::c_int;
pub type ALenum = ::std::os::raw::c_int;
pub type ALfloat = f32;
pub type ALdouble = f64;
pub type ALvoid = ::std::os::raw::c_void;

pub type LPALENABLE = ::std::option::Option<extern "C" fn(capability: ALenum)>;
pub type LPALDISABLE = ::std::option::Option<extern "C" fn(capability: ALenum)>;
pub type LPALISENABLED = ::std::option::Option<extern "C" fn(capability: ALenum) -> ALboolean>;
pub type LPALGETSTRING = ::std::option::Option<extern "C" fn(param: ALenum) -> *const ALchar>;
pub type LPALGETBOOLEANV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALboolean)>;
pub type LPALGETINTEGERV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALint)>;
pub type LPALGETFLOATV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALfloat)>;
pub type LPALGETDOUBLEV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALdouble)>;
pub type LPALGETBOOLEAN = ::std::option::Option<extern "C" fn(param: ALenum) -> ALboolean>;
pub type LPALGETINTEGER = ::std::option::Option<extern "C" fn(param: ALenum) -> ALint>;
pub type LPALGETFLOAT = ::std::option::Option<extern "C" fn(param: ALenum) -> ALfloat>;
pub type LPALGETDOUBLE = ::std::option::Option<extern "C" fn(param: ALenum) -> ALdouble>;
pub type LPALGETERROR = ::std::option::Option<extern "C" fn() -> ALenum>;
pub type LPALISEXTENSIONPRESENT = ::std::option::Option<unsafe extern "C" fn(extname: *const ALchar) -> ALboolean>;
pub type LPALGETPROCADDRESS = ::std::option::Option<unsafe extern "C" fn(fname: *const ALchar) -> *mut ::std::os::raw::c_void>;
pub type LPALGETENUMVALUE = ::std::option::Option<unsafe extern "C" fn(ename: *const ALchar) -> ALenum>;
pub type LPALLISTENERF = ::std::option::Option<extern "C" fn(param: ALenum, value: ALfloat)>;
pub type LPALLISTENER3F = ::std::option::Option<extern "C" fn(param: ALenum, value1: ALfloat, value2: ALfloat, value3: ALfloat)>;
pub type LPALLISTENERFV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *const ALfloat)>;
pub type LPALLISTENERI = ::std::option::Option<extern "C" fn(param: ALenum, value: ALint)>;
pub type LPALLISTENER3I = ::std::option::Option<extern "C" fn(param: ALenum, value1: ALint, value2: ALint, value3: ALint)>;
pub type LPALLISTENERIV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *const ALint)>;
pub type LPALGETLISTENERF = ::std::option::Option<unsafe extern "C" fn(param: ALenum, value: *mut ALfloat)>;
pub type LPALGETLISTENER3F = ::std::option::Option<unsafe extern "C" fn(param: ALenum, value1: *mut ALfloat, value2: *mut ALfloat, value3: *mut ALfloat)>;
pub type LPALGETLISTENERFV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALfloat)>;
pub type LPALGETLISTENERI = ::std::option::Option<unsafe extern "C" fn(param: ALenum, value: *mut ALint)>;
pub type LPALGETLISTENER3I = ::std::option::Option<unsafe extern "C" fn(param: ALenum, value1: *mut ALint, value2: *mut ALint, value3: *mut ALint)>;
pub type LPALGETLISTENERIV = ::std::option::Option<unsafe extern "C" fn(param: ALenum, values: *mut ALint)>;
pub type LPALGENSOURCES = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *mut ALuint)>;
pub type LPALDELETESOURCES = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *const ALuint)>;
pub type LPALISSOURCE = ::std::option::Option<extern "C" fn(source: ALuint) -> ALboolean>;
pub type LPALSOURCEF = ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum, value: ALfloat)>;
pub type LPALSOURCE3F = ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum, value1: ALfloat, value2: ALfloat, value3: ALfloat)>;
pub type LPALSOURCEFV = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, values: *const ALfloat)>;
pub type LPALSOURCEI = ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum, value: ALint)>;
pub type LPALSOURCE3I = ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum, value1: ALint, value2: ALint, value3: ALint)>;
pub type LPALSOURCEIV = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, values: *const ALint)>;
pub type LPALGETSOURCEF = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, value: *mut ALfloat)>;
pub type LPALGETSOURCE3F = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, value1: *mut ALfloat, value2: *mut ALfloat, value3: *mut ALfloat)>;
pub type LPALGETSOURCEFV = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, values: *mut ALfloat)>;
pub type LPALGETSOURCEI = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, value: *mut ALint)>;
pub type LPALGETSOURCE3I = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, value1: *mut ALint, value2: *mut ALint, value3: *mut ALint)>;
pub type LPALGETSOURCEIV = ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum, values: *mut ALint)>;
pub type LPALSOURCEPLAYV = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *const ALuint)>;
pub type LPALSOURCESTOPV = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *const ALuint)>;
pub type LPALSOURCEREWINDV = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *const ALuint)>;
pub type LPALSOURCEPAUSEV = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, sources: *const ALuint)>;
pub type LPALSOURCEPLAY = ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCESTOP = ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEREWIND = ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEPAUSE = ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEQUEUEBUFFERS = ::std::option::Option<unsafe extern "C" fn(source: ALuint, nb: ALsizei, buffers: *const ALuint)>;
pub type LPALSOURCEUNQUEUEBUFFERS = ::std::option::Option<unsafe extern "C" fn(source: ALuint, nb: ALsizei, buffers: *mut ALuint)>;
pub type LPALGENBUFFERS = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, buffers: *mut ALuint)>;
pub type LPALDELETEBUFFERS = ::std::option::Option<unsafe extern "C" fn(n: ALsizei, buffers: *const ALuint)>;
pub type LPALISBUFFER = ::std::option::Option<extern "C" fn(buffer: ALuint) -> ALboolean>;
pub type LPALBUFFERDATA = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, format: ALenum, data: *const ALvoid, size: ALsizei, freq: ALsizei)>;
pub type LPALBUFFERF = ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum, value: ALfloat)>;
pub type LPALBUFFER3F = ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum, value1: ALfloat, value2: ALfloat, value3: ALfloat)>;
pub type LPALBUFFERFV = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, values: *const ALfloat)>;
pub type LPALBUFFERI = ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum, value: ALint)>;
pub type LPALBUFFER3I = ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum, value1: ALint, value2: ALint, value3: ALint)>;
pub type LPALBUFFERIV = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, values: *const ALint)>;
pub type LPALGETBUFFERF = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, value: *mut ALfloat)>;
pub type LPALGETBUFFER3F = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, value1: *mut ALfloat, value2: *mut ALfloat, value3: *mut ALfloat)>;
pub type LPALGETBUFFERFV = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, values: *mut ALfloat)>;
pub type LPALGETBUFFERI = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, value: *mut ALint)>;
pub type LPALGETBUFFER3I = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, value1: *mut ALint, value2: *mut ALint, value3: *mut ALint)>;
pub type LPALGETBUFFERIV = ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum, values: *mut ALint)>;
pub type LPALDOPPLERFACTOR = ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALDOPPLERVELOCITY = ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALSPEEDOFSOUND = ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALDISTANCEMODEL = ::std::option::Option<extern "C" fn(distanceModel: ALenum)>;
